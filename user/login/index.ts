/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /user/login
 */
export interface LoginRequestBuilder extends BaseRequestBuilder<LoginRequestBuilder> {
    /**
     * Logs user into the system
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<string>}
     */
     get(requestConfiguration?: RequestConfiguration<LoginRequestBuilderGetQueryParameters> | undefined) : Promise<string | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<LoginRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Logs user into the system
 */
export interface LoginRequestBuilderGetQueryParameters {
    /**
     * The password for login in clear text
     */
    password?: string;
    /**
     * The user name for login
     */
    username?: string;
}
/**
 * Uri template for the request builder.
 */
export const LoginRequestBuilderUriTemplate = "{+baseurl}/user/login{?password*,username*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const LoginRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: LoginRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "string",
    },
};
/* tslint:enable */
/* eslint-enable */
